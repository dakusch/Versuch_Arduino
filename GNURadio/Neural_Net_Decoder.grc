options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: Neural_Net_Decoder
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: noise_amplitude
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Noise Level
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '.01'
    stop: '10'
    value: '0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: true
- name: analog_noise_source_x_0
  id: analog_noise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: noise_amplitude
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    seed: '0'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 468.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: samp_rate/sps/2
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'False'
    type: float
    waveform: analog.GR_SQR_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 164.0]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [472, 408.0]
    rotation: 0
    state: true
- name: blocks_int_to_float_0
  id: blocks_int_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 308.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 380.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nfrom tensorflow.keras.models\
      \ import load_model\n\nclass KerasOOKDecoder(gr.sync_block):\n    def __init__(self,\
      \ offset=0):\n        gr.sync_block.__init__(self,\n                       \
      \        name=\"Keras OOK Decoder\",\n                               in_sig=[np.float32],\n\
      \                               out_sig=[np.int32])\n        self.model = load_model('/home/david/Nextcloud/Arbeit_ANT/Versuch_Arduino/Neural_Net/data/tes_new.keras')\n\
      \        self.symbol_length = 100\n        self.offset = offset  # Offset-Parameter\
      \ hinzugef\xFCgt\n\n    def work(self, input_items, output_items):\n       \
      \ in0 = input_items[0]\n        out = output_items[0]\n        \n        # Pr\xFC\
      fen, ob genug Daten vorhanden sind, um die Verarbeitung zu starten\n       \
      \ if len(in0) < self.symbol_length + self.offset:\n            return 0  # Nicht\
      \ genug Daten, um Offset und ein vollst\xE4ndiges Symbol zu behandeln\n\n  \
      \      # Beginnend vom Offset die Daten f\xFCr das Modell vorbereiten\n    \
      \    start_index = self.offset\n        end_index = start_index + (len(in0)\
      \ - self.offset) // self.symbol_length * self.symbol_length\n        reshaped_samples\
      \ = np.reshape(in0[start_index:end_index], (-1, self.symbol_length))\n\n   \
      \     # Das Modell auf alle Samples gleichzeitig anwenden\n        predictions\
      \ = self.model.predict(reshaped_samples).round().astype(np.int32).flatten()\n\
      \n        # Die Vorhersagen in die Ausgabe kopieren\n        out[:len(predictions)]\
      \ = predictions\n        \n        return len(predictions)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
  states:
    _io_cache: ('Keras OOK Decoder', 'KerasOOKDecoder', [('offset', '0')], [('0',
      'float', 1)], [('0', 'int', 1)], '', ['offset'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [928, 316.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\nclass OOK_Synchronizer(gr.sync_block):\n\
      \    def __init__(self, threshold=0.5, symbol_length=100):\n        gr.sync_block.__init__(self,\n\
      \                               name=\"OOK Synchronizer\",\n               \
      \                in_sig=[np.float32],\n                               out_sig=[np.float32])\n\
      \        self.threshold = threshold\n        self.symbol_length = symbol_length\n\
      \        self.synced = False\n        self.index = 0\n\n    def work(self, input_items,\
      \ output_items):\n        in0 = input_items[0]\n        out = output_items[0]\n\
      \        noutput_items = len(in0)\n\n        for i in range(noutput_items):\n\
      \            if not self.synced:\n                if in0[i] > self.threshold:\n\
      \                    self.synced = True\n                    self.index = 0\n\
      \            if self.synced:\n                if self.index < self.symbol_length:\n\
      \                    out[self.index] = in0[i]\n                    self.index\
      \ += 1\n                if self.index == self.symbol_length:\n             \
      \       self.synced = False\n                    self.index = 0\n\n        return\
      \ self.index\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    symbol_length: sps
    threshold: '0.8'
  states:
    _io_cache: ('OOK Synchronizer', 'OOK_Synchronizer', [('threshold', '0.5'), ('symbol_length',
      '100')], [('0', 'float', 1)], [('0', 'float', 1)], '', ['symbol_length', 'threshold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [688, 260.0]
    rotation: 0
    state: bypassed
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'False'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: int(1024/sps)
    srate: samp_rate
    stemplot: 'True'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.1'
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1144, 436.0]
    rotation: 180
    state: true
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '0'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.01'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 484.0]
    rotation: 0
    state: true

connections:
- [analog_noise_source_x_0, '0', blocks_add_xx_0, '1']
- [analog_sig_source_x_0, '0', blocks_throttle2_0, '0']
- [blocks_add_xx_0, '0', epy_block_1, '0']
- [blocks_add_xx_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_int_to_float_0, '0', qtgui_time_sink_x_0, '0']
- [blocks_throttle2_0, '0', blocks_add_xx_0, '0']
- [epy_block_0, '0', blocks_int_to_float_0, '0']
- [epy_block_1, '0', epy_block_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.6.0
